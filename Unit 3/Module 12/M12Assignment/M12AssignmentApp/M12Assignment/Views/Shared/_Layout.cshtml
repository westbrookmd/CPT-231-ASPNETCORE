@{

        var current = ViewContext.RouteData.Values["area"]?.ToString() ??
        ViewContext.RouteData.Values["controller"]?.ToString();
}
@using Microsoft.AspNetCore.Http.Extensions

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CPT231InClass</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">M12AssignmentWestbrook</a>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="nav nav-pills flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link  @Nav.Active("Home", current) " asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link  @Nav.Active("Admin", current) " 
                               asp-area="Admin" asp-controller="Maze" asp-action="Index">Admin</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link  @Nav.Active("Help", current) " 
                               asp-area="Help" asp-controller="Help" asp-action="Index">Help</a>
                        </li>
                        <!-- Login buttons and links -->
                     @using Microsoft.AspNetCore.Identity
                    @inject SignInManager<User> signInManager

                    @if (signInManager.IsSignedIn(User))
                    {
                        // signed-in user - Log Out button and username
                        <li class="nav-item">
                            <form method="post" asp-action="LogOut" asp-controller="Account"
                                  asp-area="">
                                <input type="submit" value="Log Out"
                                       class="nav-link" />
                            </form>
                        </li>
                    }
                    else
                    {
                        var action = ViewContext.RouteData.Values["action"]?.ToString();

                        // anonymous user - Register link and Log In button
                        <li class="nav-item @Nav.Active("Register", action)">
                            <a asp-action="Register" asp-controller="Account"
                               asp-area="" class="nav-link">
                                <span class="fas fa-edit"></span>&nbsp;Register
                            </a>
                        </li>
                        <li class="nav-item">
                            <a asp-action="Login" asp-controller="Account" asp-route-returnURL="@ViewContext.HttpContext.Request.Path"
                               asp-area="" class="nav-link">Log In</a>
                        </li>
                    }
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2021 - M12AssignmentWestbrook
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
